@{
    ViewData["Title"] = "Home Page";
}


<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />

   

</head>
<body>

    <div class="row">


        <div class="col-3 float-left">
            <div class="row">
                <div class="label">totals</div>
                <ul id="totalLst" class="list-group-horizontal flex-wrap"></ul>
                </div>
            </div>


            <div class="col-9 float-right">
                <div class="row">
                    <div class="label col-2">batches</div>
                    <button id="simulateSale" class="btn btn-outline-dark">simulateSale</button>
                    <button id="createBatch" class="btn btn-outline-dark">create</button>



                    <select id="nameOfDoughnutBatch" class="form-select col-3">
                        <option value="Churro">Churro</option>
                        <option value="Frosted Sprinkled">Frosted Sprinkled</option>
                        <option value="Strawberry Filled">Strawberry Filled</option>
                        <option value="Captain Crunched">Captain Crunched</option>
                        <option value="Nutella Filled">Nutella Filled</option>
                        <option value="Chocolate Glazed">Chocolate Glazed</option>
                        <option value="Classic Glazed">Classic Glazed</option>
                        <option value="Powdered Sugar">Powdered Sugar</option>
                    </select>
                    <select id="quantityOfBatch" class="form-select col-3">
                        <option value="6">6</option>
                        <option value="12">12</option>
                        <option value="24">24</option>
                        <option value="48">48</option>
                    </select>

                </div>



                <ul id="batchesLst" class="list-group-horizontal d-flex flex-wrap justify-content-center float-left"></ul>


            </div>







        </div>







</body>
</html>
<script type="text/javascript">

    window.addEventListener("load", updateAll, false);
    document.getElementById("createBatch").addEventListener("click", createBatchRecord, false);
    document.getElementById("simulateSale").addEventListener("click", simulateSale, false);

    function updateAll() {
        var ul = document.getElementsByClassName("list-group-horizontal");
        console.log(ul);

        $.each(ul, function (key, value) {
            console.log("list is: " + value);
            while (value.firstChild) {
                value.removeChild(value.firstChild);
                console.log("removed first child: " + value.firstChild);
            }

        });

        getAllBatches();
        getSales();
    };

    function createBatchRecord() {
        var nameOf = document.getElementById("nameOfDoughnutBatch").value;
        var total = document.getElementById("quantityOfBatch").value;
        $.ajax({
            type: 'POST',
            url: '/Home/CreateBatch',
            dataType: 'json',
            data: "data=" + JSON.stringify({ id: 0, nameOf: nameOf, total: total }),
            success: function (data) {
                response = JSON.parse(data);
                alert(response);
                updateAll();
            },
            error: function () { console.log("FAIL ON CREATE BATCH"); }
        });
    };

    function getAllBatches() {
        $.ajax({
            type: 'GET',
            url: '/Home/GetBatches',
            dataType: 'json',
            success: function (data) {
                response = JSON.parse(data);
                console.log(response);
                $.each(response, function (key, value) {
                    var li =
                        $('<div class="card"; style="margin: 2px; background-color: #2d2d30;"><div class="container "; style="margin:5px;  width:320px; height:220px; color: white;">'
                            + '<div class="card-header"; style="height: 50px; font-size: large; background-color: transparent; "><div id="flexSwitchCompleted"; class="form-check form-switch float-left"><input class="form-check-input"; type="checkbox"><div class="form-text inline-flex"; style="color: white;"">'
                            + value['NameOf'] + '</div></div><div class="float-right"  style="color: #808080";>' + value['Total'] + " left"
                            + '</div></div><div class="card-content" style="padding: 10px; height:100px; color: #808080;">Notes:</div><div class="card-footer"><div style="color: #d09a49; font-size: medium;">' + '<mark>' + "expires: "  + value['Expire'] + '</div></mark><div style="color: #d09a49; font-size: medium;">' + "total sold: " + value['TotalSold'] + '</div></div></div></div>');
                    $('#batchesLst').append(li);
                });
            },
            error: function () { console.log("FAIL ON CREATE BATCH"); }

        });
    };

    function getSales() {
        $.ajax({
            url: '/Home/getTotalSold',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                response = JSON.parse(data);
                console.log(response);
                $.each(response, function (key, value) {
                    var li =
                        $('<div class="container" style="margin:0px;  width:100%; padding:40px; height:auto;"><div style=" font-size: large; color: white;">' + value['NameOf'] + '</div></br><p  style="color: #808080";>' + "qty sold: " + value['Total'] + '</p><div><span class="badge bg-primary rounded-pill"; style="background-color:#4cff00; font-size: small;">' + value['TotalMoneyAmount'] + "$" + '</span></div></div>');
                    $('#totalLst').append(li);
                });
            },
            error: function () { console.log("FAIL ON GET TOTAL BY TYPE"); }
        });
    };

    //function deleteFromInventory() {

    //    var isCheckedAndIds = Array.prototype.slice.call(document.getElementsByClassName("form-check-input")).map(function (x) { return { "isChecked": x['checked'], "Id": x.nextSibling.innerText }; });

    //    function removeItemAll(isCheckedAndIds) {
    //        var i = 0;
    //        while (i < isCheckedAndIds.length) {
    //            if (isCheckedAndIds[i].isChecked === false) {
    //                isCheckedAndIds.splice(i, 1);
    //            } else {
    //                ++i;
    //            }
    //        }
    //        console.log(isCheckedAndIds);
    //        return isCheckedAndIds;
    //    };

    //    var batchesCheckedToDelete = removeItemAll(isCheckedAndIds);

    //    $.ajax({
    //        type: 'POST',
    //        url: '/Home/DeleteFromInventory',
    //        dataType: 'json',
    //        data: "data=" + JSON.stringify(batchesCheckedToDelete),
    //        success: function (data) {
    //            updateAll();
    //        },
    //        error: function () { console.log("FAIL ON DELETE FROM INVENTORY"); }
    //    });
    //};
</script>
